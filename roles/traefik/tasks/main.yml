---
# tasks file for traefik
- name: traefik
  when: "'nodeps' not in ansible_run_tags"
  block:
    - name: network
      docker_network:
        name: traefik_public
        attachable: yes
        driver: overlay
        state: present
        internal: false

    - name: boreale data directory
      file:
        path: "{{ boreale_data_directory }}"
        state: directory

    - name: rules directory
      file:
        path: "{{ traefik_data_directory }}/rules.d"
        state: directory

    - name: acme.json file
      file:
        path: "{{ traefik_data_directory }}/acme.json"
        state: touch
        mode: 0600

    - name: traefik config file
      template:
        src: traefik.yaml.j2
        dest: "{{ traefik_data_directory }}/traefik.yaml"

    - name: traefik middlewares config file
      template:
        src: middlewares.yaml.j2
        dest: "{{ traefik_data_directory }}/rules.d/middlewares.yaml"

    - name: remove extra routes directory
      file:
        path: "{{ traefik_data_directory }}/rules.d/extra_routes"
        state: absent
      tags:
        - extra_routes

    - name: create extra routes directory
      file:
        path: "{{ traefik_data_directory }}/rules.d/extra_routes"
        state: directory
      tags:
        - extra_routes

    - name: extra routes
      template:
        src: extra_route.yaml.j2
        dest: "{{ traefik_data_directory }}/rules.d/{{ item.key }}.yaml"
        lstrip_blocks: true
      loop: "{{ extra_routes | dict2items }}"
      tags:
        - extra_routes

    - name: compose
      docker_compose:
        project_name: "{{ traefik_project_name }}"
        pull: "{{ 'upgrade' in ansible_run_tags }}"
        definition:
          version: "3.5"
          networks:
            traefik_public:
              external: true
            traefik_internal:
              name: traefik_internal
              driver: overlay
              internal: true
          services:
            duckdns:
              container_name: "{{ duckdns_container_name }}"
              image: "{{ duckdns_container_image }}"
              restart: "{{ duckdns_restart_policy }}"
              environment:
                - "TZ={{ timezone }}"
                - "SUBDOMAINS={{ domain }}"
                - "LOG_FILE=false"
                - "TOKEN={{ duckdns_token }}"
            boreale:
              container_name: "{{ boreale_container_name }}"
              image: "{{ boreale_container_image }}"
              restart: "{{ boreale_restart_policy }}"
              environment: 
                - "SECRET_KEY_BASE={{ lookup('password', 'credentials/boreale/secret_key_base length=64') }}"
                - "SIGNING_SALT={{ lookup('password', 'credentials/boreale/signing_salt length=64') }}"
                - "ENCRYPTION_SALT={{ lookup('password', 'credentials/boreale/encryption_salt length=64') }}"
                - "PAGE_TITLE={{ boreale_page_title }}"
                - "SSO_DOMAIN_NAME={{ domain }}"
              volumes:
                - "{{ boreale_data_directory }}:/opt/app/data"
              networks:
                - traefik_internal
            traefik:
              container_name: "{{ traefik_container_name }}"
              image: "{{ traefik_container_image }}"
              restart: "{{ traefik_restart_policy }}"
              environment:
                - "TZ={{ timezone }}"
                - "DUCKDNS_TOKEN={{ duckdns_token }}"
              ports:
                - "80:80"
                - "443:443"
              volumes:
                - "{{ docker_socket_path }}:/var/run/docker.sock:ro"
                - "{{ traefik_data_directory }}/acme.json:/acme.json"
                - "{{ traefik_data_directory }}/rules.d:/rules.d"
                - "{{ traefik_data_directory }}/traefik.yaml:/traefik.yaml"
              labels:
                - "traefik.enable={{ traefik_expose }}"
                - "traefik.http.routers.traefik.tls=true"
                - "traefik.http.routers.traefik.rule=Host(`traefik.{{ domain }}`)"
                - "traefik.http.routers.traefik.middlewares=fauth@file"
                - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
                - "traefik.http.services.traefik.loadbalancer.server.port=8080"
              networks:
                - traefik_internal
                - traefik_public
              extra_hosts:
                "host.docker.internal": "{{ host_ip }}"

    - name: wait for boreale
      pause:
        seconds: 10
      when: ansible_facts['lsb']['id'] == 'Raspbian'

    - name: boreale users
      expect:
        command: "docker exec -i {{ boreale_container_name }} bin/boreale cli users add"
        responses:
          "username:": "{{ item.username }}"
          "password:": "{{ item.password }}"
      loop: "{{ boreale_users }}"
      no_log: true
      tags: boreale_users
