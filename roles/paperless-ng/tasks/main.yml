---
# task file for paperless_ng

- name: network
  docker_network:
    name: "{{ paperless_ng_network_name }}"
    attachable: true
    state: present
    driver: overlay
    internal: true

- name: directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ paperless_ng_uid }}"
    group: "{{ paperless_ng_gid }}"
  loop:
    - "{{ paperless_ng_data_directory }}"
    - "{{ paperless_ng_media_directory }}"
    - "{{ paperless_ng_consume_directory }}"
    - "{{ paperless_ng_export_directory }}"
    - "{{ paperless_ng_db_directory }}"

- name: redis docker container
  docker_container:
    name: "{{ paperless_ng_redis_container_name }}"
    image: "{{ paperless_ng_redis_container_image }}"
    recreate: true
    state: started
    container_default_behavior: no_defaults
    networks_cli_compatible: no
    restart_policy: "{{ paperless_ng_redis_restart_policy }}"
    pull: "{{ 'upgrade' in ansible_run_tags }}"
    networks:
      - name: "{{ paperless_ng_network_name }}"

- name: postgres docker container
  docker_container:
    name: "{{ paperless_ng_postgres_container_name }}"
    image: "{{ paperless_ng_postgres_container_image }}"
    recreate: true
    state: started
    container_default_behavior: no_defaults
    networks_cli_compatible: no
    restart_policy: "{{ paperless_ng_postgres_restart_policy }}"
    pull: "{{ 'upgrade' in ansible_run_tags }}"
    volumes:
      - "{{ paperless_ng_db_directory }}:/var/lib/postgresql/data"
    env:
      POSTGRES_DB: "{{ paperless_ng_postgres_db }}"
      POSTGRES_USER: "{{ paperless_ng_postgres_user }}"
      POSTGRES_PASSWORD: "{{ paperless_ng_postgres_password }}"
    networks:
      - name: "{{ paperless_ng_network_name }}"

- name: docker container
  docker_container:
    name: "{{ paperless_ng_container_name }}"
    image: "{{ paperless_ng_container_image }}"
    recreate: true
    state: started
    container_default_behavior: no_defaults
    networks_cli_compatible: no
    restart_policy: "{{ paperless_ng_restart_policy }}"
    pull: "{{ 'upgrade' in ansible_run_tags }}"
    env:
      TZ: "{{ timezone }}"
      USERMAP_UID: "{{ paperless_ng_uid }}"
      USERMAP_GID: "{{ paperless_ng_gid }}"
      PAPERLESS_OCR_THREADS: "{{ paperless_ng_ocr_threads }}"
      PAPERLESS_OCR_LANGUAGE: "{{ paperless_ng_ocr_language }}"
      PAPERLESS_OCR_LANGUAGES: "{{ paperless_ng_ocr_languages }}"
      PAPERLESS_SECRET_KEY: "{{ paperless_ng_secret_key }}" 
      PAPERLESS_ALLOWED_HOSTS: "{{ paperless_ng_allowed_hosts }}"
      PAPERLESS_FILENAME_FORMAT: "{{ paperless_ng_filename_format }}"
      PAPERLESS_REDIS: "redis://{{ paperless_ng_redis_container_name }}:6379"
      PAPERLESS_DBHOST: "{{ paperless_ng_postgres_container_name }}"
      PAPERLESS_DBNAME: "{{ paperless_ng_postgres_db }}"
      PAPERLESS_DBUSER: "{{ paperless_ng_postgres_user }}"
      PAPERLESS_DBPASS: "{{ paperless_ng_postgres_password }}"
    volumes:
      - "{{ paperless_ng_data_directory }}:/usr/src/paperless/data"
      - "{{ paperless_ng_media_directory }}:/usr/src/paperless/media"
      - "{{ paperless_ng_consume_directory }}:/consume"
      - "{{ paperless_ng_export_directory }}:/export"
    labels:
      traefik.enable: "{{ paperless_ng_expose }}"
      traefik.http.routers.paperless_ng.tls: "true"
      traefik.http.routers.paperless_ng.rule: "{{ paperless_ng_traefik_rule }}"
      traefik.http.routers.paperless_ng.tls.certresolver: letsencrypt
      traefik.http.routers.paperless_ng.middlewares: frame-allow@file
      traefik.http.services.paperless_ng.loadbalancer.server.port: "8000"
    networks:
      - name: "{{ traefik_network_name }}"
        aliases:
          - "{{ traefik_container_name }}"
      - name: "{{ paperless_ng_network_name }}"

- name: wait
  pause:
    seconds: 5

- name: superuser
  expect:
    command: "docker exec -it {{ paperless_ng_container_name }} python3 /usr/src/paperless/src/manage.py createsuperuser"
    timeout: 10
    responses:
      "Username ": "{{ paperless_ng_superuser_name }}"
      "Email": "{{ paperless_ng_superuser_mail }}"
      "Password": "{{ paperless_ng_superuser_password }}"
      "Bypass": "y"
      "Error": "\003"
  ignore_errors: yes
  no_log: true
