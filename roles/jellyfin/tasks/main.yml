---
# task file for jellyfin

- name: directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ media_user.uid }}"
    group: "{{ media_user.group }}"
  loop:
    - "{{ jellyfin_runtime_directory }}/cache"
    - "{{ jellyfin_runtime_directory }}/log"
    - "{{ jellyfin_runtime_directory }}/data"
    - "{{ jellyfin_data_directory }}"

- name: compose
  docker_compose:
    project_name: "{{ jellyfin_project_name }}"
    pull: "{{ 'upgrade' in ansible_run_tags }}"
    definition:
      version: "3.5"
      services:
        jellyfin:
          container_name: "{{ jellyfin_container_name }}"
          image: "{{ jellyfin_container_image }}"
          restart: "{{ jellyfin_restart_policy }}"
          environment:
            - "TZ={{ timezone }}"
            - "PUID={{ media_user.uid }}"
            - "PGID={{ media_user.group }}"
            - "UMASK={{ media_umask }}"
          volumes:
            - "{{ jellyfin_data_directory }}:/config"
            - "{{ media_directory }}/media:/data/media"
            - "{{ jellyfin_runtime_directory }}/cache:/config/cache"
            - "{{ jellyfin_runtime_directory }}/log:/config/log"
            - "{{ jellyfin_runtime_directory }}/data:/config/data"
          devices: "{{ jellyfin_devices }}"
          labels:
            - "traefik.enable={{ jellyfin_expose }}"
            - "traefik.http.routers.jellyfin.tls=true"
            - "traefik.http.routers.jellyfin.rule={{ jellyfin_traefik_rule }}"
            - "traefik.http.routers.jellyfin.tls.certresolver=letsencrypt"
            - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"
          network_mode: host
          extra_hosts:
            "host.docker.internal": "{{ host_ip }}"
