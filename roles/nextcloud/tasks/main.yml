---
# task file for nextcloud

- name: data directories
  file:
    path: "{{ item }}"
    state: directory
    owner: www-data
    group: www-data
  loop:
    - "{{ nextcloud_runtime_directory }}/html"
    - "{{ nextcloud_data_directory }}/apps"
    - "{{ nextcloud_data_directory }}/config"
    - "{{ nextcloud_storage_directory }}"

- name: db and redis directories
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ nextcloud_runtime_directory }}/db"
    - "{{ nextcloud_runtime_directory }}/redis"

- name: db backup
  include_role:
    name: mysql_backup
    public: true
  vars:
    mysql_backup_password: "{{ nextcloud_mysql_root_password }}"
    mysql_backup_compose: true

- name: compose
  docker_compose:
    project_name: "{{ nextcloud_project_name }}"
    definition:
      version: "3.5"
      networks:
        nextcloud:
          name: nextcloud
          driver: overlay
          internal: true
        mail:
          external: true
        traefik_public:
          external: true
      services:
        db:
          container_name: "{{ nextcloud_container_name }}_db"
          image: "{{ nextcloud_db_container_image }}"
          restart: "{{ nextcloud_db_restart_policy }}"
          environment:
            - "TZ={{ timezone }}"
            - "MYSQL_HOST={{ nextcloud_container_name }}_db"
            - "MYSQL_ROOT_PASSWORD={{ nextcloud_mysql_root_password }}"
            - "MYSQL_DATABASE=nextcloud"
            - "MYSQL_USER=nextcloud"
            - "MYSQL_PASSWORD={{ nextcloud_mysql_password }}"
          volumes:
            - "{{ nextcloud_runtime_directory }}/db:/var/lib/mysql"
          networks:
            - nextcloud
        db_backup: "{{ mysql_backup_definition }}"
        redis:
          container_name: "{{ nextcloud_container_name }}_redis"
          image: "{{ nextcloud_redis_container_image }}"
          restart: "{{ nextcloud_redis_restart_policy }}"
          volumes:
            - "{{ nextcloud_runtime_directory }}/redis:/data"
          networks:
            - nextcloud
        nextcloud:
          container_name: "{{ nextcloud_container_name }}"
          image: "{{ nextcloud_container_image }}"
          restart: "{{ nextcloud_restart_policy }}"
          environment:
            - "TZ={{ timezone }}"
            - "NEXTCLOUD_ADMIN_USER={{ nextcloud_admin_user }}"
            - "NEXTCLOUD_ADMIN_PASSWORD={{ nextcloud_admin_pass }}"
            - "NEXTCLOUD_TRUSTED_DOMAINS=nextcloud.{{ domain }} localhost"
            - "MYSQL_HOST={{ nextcloud_container_name }}_db"
            - "MYSQL_ROOT_PASSWORD={{ nextcloud_mysql_root_password }}"
            - "MYSQL_DATABASE=nextcloud"
            - "MYSQL_USER=nextcloud"
            - "MYSQL_PASSWORD={{ nextcloud_mysql_password }}"
            - "REDIS_HOST_PASSWORD=foo"
          volumes: "{{ nextcloud_all_volumes }}"
          labels:
            - "traefik.enable={{ nextcloud_expose }}"
            - "traefik.http.routers.nextcloud.tls=true"
            - "traefik.http.routers.nextcloud.rule={{ nextcloud_traefik_rule }}"
            - "traefik.http.routers.nextcloud.tls.certresolver=letsencrypt"
            - "traefik.http.services.nextcloud.loadbalancer.server.port=80"
          networks:
            - traefik_public
            - nextcloud
            - mail
        cron:
          container_name: "{{ nextcloud_container_name }}_cron"
          image: "{{ nextcloud_container_image }}"
          restart: "{{ nextcloud_cron_restart_policy }}"
          environment:
            - "TZ={{ timezone }}"
            - "NEXTCLOUD_ADMIN_USER={{ nextcloud_admin_user }}"
            - "NEXTCLOUD_ADMIN_PASSWORD={{ nextcloud_admin_pass }}"
            - "NEXTCLOUD_TRUSTED_DOMAINS=nextcloud.{{ domain }} localhost"
            - "MYSQL_HOST={{ nextcloud_container_name }}_db"
            - "MYSQL_ROOT_PASSWORD={{ nextcloud_mysql_root_password }}"
            - "MYSQL_DATABASE=nextcloud"
            - "MYSQL_USER=nextcloud"
            - "MYSQL_PASSWORD={{ nextcloud_mysql_password }}"
          volumes: "{{ nextcloud_all_volumes }}"
          user: www-data
          networks:
            - nextcloud
          entrypoint: |
            bash -c 'bash -s <<EOF
              trap "break;exit" SIGHUP SIGINT SIGTERM
              while [ ! -f /var/www/html/config/config.php ]; do
                sleep 1
              done
              while true; do
                php -f /var/www/html/cron.php
                sleep 15m
              done
            EOF'
