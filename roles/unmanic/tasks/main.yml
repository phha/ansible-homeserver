---
# task file for unmanic

- name: unmanic directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ media_uid }}"
    group: "{{ media_gid }}"
  loop:
    - "{{ unmanic_runtime_directory }}"
    - "{{ unmanic_data_directory }}"
    - "{{ media_movies_directory }}"
    - "{{ media_series_directory }}"

- name: unmanic docker container
  docker_container:
    name: "{{ unmanic_container_name }}"
    image: "{{ unmanic_container_image }}"
    recreate: true
    state: started
    container_default_behavior: no_defaults
    networks_cli_compatible: no
    restart_policy: unless-stopped
    pull: "{{ 'upgrade' in ansible_run_tags }}"
    env:
      TZ: "{{ timezone }}"
      PUID: "{{ media_uid }}"
      PGID: "{{ media_gid }}"
      VIDEO_CODEC: "{{ unmanic_video_codec }}"
      REMOVE_SUBTITLE_STREAMS: "{{ unmanic_remove_subtitle_streams }}"
      NUMBER_OF_WORKERS: "{{ unmanic_number_of_workers }}"
      SCHEDULE_FULL_SCAN_MINS: "{{ unmanic_schedule_full_scan_mins }}"
      SUPPORTED_CONTAINERS: "{{ unmanic_extensions }}"
    volumes:
      - "{{ unmanic_data_directory }}:/config"
      - "{{ unmanic_runtime_directory }}:/tmp/unmanic"
      - "{{ media_series_directory }}:/library/series"
      - "{{ media_movies_directory }}:/library/movies"
    labels:
      traefik.enable: "{{ unmanic_expose }}"
      traefik.http.routers.unmanic.tls: "true"
      traefik.http.routers.unmanic.rule: "{{ unmanic_traefik_rule }}"
      traefik.http.routers.unmanic.middlewares: fauth@file
      traefik.http.routers.unmanic.tls.certresolver: letsencrypt
      traefik.http.services.unmanic.loadbalancer.server.port: "8888"
    networks:
      - name: "{{ traefik_network_name }}"
